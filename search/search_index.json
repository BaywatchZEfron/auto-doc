{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Bienvenido a AutoMaths","text":"<p>Esta documentaci\u00f3n explica el uso de la librer\u00eda de funciones matem\u00e1ticas que acepta un n\u00famero indefinido de argumentos (*args).</p> <ul> <li>Contiene operaciones de suma, resta, multiplicaci\u00f3n y divisi\u00f3n.</li> <li>Todos los ejemplos se ejecutan en Python 3.x.</li> </ul> <p>Para ver los ejemplos de uso y descripci\u00f3n de cada funci\u00f3n, navega a la secci\u00f3n Maths Functions.</p>"},{"location":"api/","title":"API de la librer\u00eda Maths","text":""},{"location":"api/#addpy","title":"add.py","text":""},{"location":"api/#maths.add.add_nums","title":"<code>add_nums(*num)</code>","text":"<p>Add numbers together.</p> <p>:param int num: One or more numbers to add. :returns: The sum of all numbers provided. :rtype: int</p> <p>Example::     &gt;&gt;&gt; add_nums(2, 3, 5)     10</p> Source code in <code>maths/add.py</code> <pre><code>def add_nums(*num):\n    \"\"\"Add numbers together.\n\n    :param int num: One or more numbers to add.\n    :returns: The sum of all numbers provided.\n    :rtype: int\n\n    Example::\n        &gt;&gt;&gt; add_nums(2, 3, 5)\n        10\n    \"\"\"\n    sum = 0\n    for n in num:\n        sum = sum + n\n    return sum\n</code></pre>"},{"location":"api/#substractpy","title":"substract.py","text":""},{"location":"api/#maths.substract.subtract_nums","title":"<code>subtract_nums(*num)</code>","text":"<p>Subtract numbers in sequence.</p> <p>The first number is taken as the starting point,  and all following numbers are subtracted from it.</p> <p>:param int num: One or more numbers to subtract. :returns: The result of sequential subtraction. :rtype: int</p> <p>Example::     &gt;&gt;&gt; subtract_nums(100, 20, 30, 40)     10</p> Source code in <code>maths/substract.py</code> <pre><code>def subtract_nums(*num):\n    \"\"\"Subtract numbers in sequence.\n\n    The first number is taken as the starting point, \n    and all following numbers are subtracted from it.\n\n    :param int num: One or more numbers to subtract.\n    :returns: The result of sequential subtraction.\n    :rtype: int\n\n    Example::\n        &gt;&gt;&gt; subtract_nums(100, 20, 30, 40)\n        10\n    \"\"\"\n    sub = num[0]\n    for n in num[1:]:\n        sub = sub - n\n    return sub\n</code></pre>"},{"location":"api/#multiplypy","title":"multiply.py","text":""},{"location":"api/#maths.multiply.multiply_nums","title":"<code>multiply_nums(*num)</code>","text":"<p>Multiply numbers together.</p> <p>:param int num: One or more numbers to multiply. :returns: The product of all numbers provided. :rtype: int</p> <p>Example::     &gt;&gt;&gt; multiply_nums(2, 3, 4)     24</p> Source code in <code>maths/multiply.py</code> <pre><code>def multiply_nums(*num):\n    \"\"\"Multiply numbers together.\n\n    :param int num: One or more numbers to multiply.\n    :returns: The product of all numbers provided.\n    :rtype: int\n\n    Example::\n        &gt;&gt;&gt; multiply_nums(2, 3, 4)\n        24\n    \"\"\"\n    mult = 1\n    for n in num:\n        mult = mult * n\n    return mult\n</code></pre>"},{"location":"api/#dividepy","title":"divide.py","text":""},{"location":"api/#maths.divide.divide_nums","title":"<code>divide_nums(*num)</code>","text":"<p>Divide numbers in sequence.</p> <p>The first number is taken as the starting point, and all following numbers divide the current result. hakuna matata</p> <p>:param int num: Two or more numbers to divide. :returns: The result of sequential division. :rtype: float</p> <p>Example::     &gt;&gt;&gt; divide_nums(100, 2, 5)     10.0</p> Source code in <code>maths/divide.py</code> <pre><code>def divide_nums(*num):\n    \"\"\"Divide numbers in sequence.\n\n    The first number is taken as the starting point,\n    and all following numbers divide the current result.\n    hakuna matata\n\n    :param int num: Two or more numbers to divide.\n    :returns: The result of sequential division.\n    :rtype: float\n\n    Example::\n        &gt;&gt;&gt; divide_nums(100, 2, 5)\n        10.0\n    \"\"\"\n    div = num[0]\n    for n in num[1:]:\n        div = div / n\n    return div\n</code></pre>"},{"location":"maths/","title":"AutoMaths","text":"<p>Esta librer\u00eda ofrece funciones b\u00e1sicas de matem\u00e1ticas que aceptan un n\u00famero indefinido de argumentos.</p>"},{"location":"maths/#suma","title":"\u2795 Suma","text":"<pre><code>&gt;&gt;&gt; from maths import add_nums\n&gt;&gt;&gt; add_nums(2, 3, 5)\n10\n</code></pre>"},{"location":"maths/#resta","title":"\u2796 Resta","text":"<pre><code>&gt;&gt;&gt; from maths import subtract_nums\n&gt;&gt;&gt; subtract_nums(100, 20, 30, 40)\n10\nhakuna matata\n</code></pre>"},{"location":"maths/#multiplicacion","title":"\u2716\ufe0f Multiplicaci\u00f3n","text":"<pre><code>&gt;&gt;&gt; from maths import multiply_nums\n&gt;&gt;&gt; multiply_nums(2, 3, 4)\n24\n</code></pre>"},{"location":"maths/#division","title":"\u2797 Divisi\u00f3n","text":"<pre><code>&gt;&gt;&gt; from maths import divide_nums\n&gt;&gt;&gt; divide_nums(100, 2, 5)\n10.0\n</code></pre>"}]}